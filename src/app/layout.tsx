'use client';

import { useState } from 'react';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { Geist, Geist_Mono } from 'next/font/google';
import { useSession, signIn } from 'next-auth/react';
import { useEffect } from 'react';
// import type { Metadata } from 'next';

import './globals.css';
import { SessionProvider } from 'next-auth/react';

const geistSans = Geist({
	variable: '--font-geist-sans',
	subsets: ['latin'],
});

const geistMono = Geist_Mono({
	variable: '--font-geist-mono',
	subsets: ['latin'],
});

// export const metadata: Metadata = {
// 	title: 'Create Next App',
// 	description: 'Generated by create next app',
// };

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const [queryClient] = useState(() => new QueryClient());

	return (
		<html lang='en'>
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}
			>
				<SessionProvider>
					<AuthWrapper>
						<QueryClientProvider client={queryClient}>
							{children}
						</QueryClientProvider>
					</AuthWrapper>
				</SessionProvider>
			</body>
		</html>
	);
}

function AuthWrapper({ children }: { children: React.ReactNode }) {
	const { status } = useSession();

	useEffect(() => {
		if (status === 'unauthenticated') {
			signIn(); // Redirects to Keycloak login
		}
	}, [status]);

	// if (status === 'loading') return <div>Loading...</div>;
	return <>{children}</>;
}
